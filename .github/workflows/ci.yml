name: CI

on:
  push:
    branches: [main, develop, vecfin-latest]
  pull_request:
    branches: [main, develop]
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  PYTHON_VERSION: "3.11"
  CACHE_VERSION: v1

jobs:
  # ============================================================================
  # Linting and Formatting
  # ============================================================================
  lint:
    name: Lint & Format Check
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}
          cache: 'pip'

      - name: Install uv
        uses: astral-sh/setup-uv@v1

      - name: Install dependencies
        run: uv sync --group dev

      - name: Run Ruff
        run: uv run ruff check . --output-format=github

      - name: Check formatting (Black)
        run: uv run black --check .

      - name: Check import sorting (isort)
        run: uv run isort --check-only .

  # ============================================================================
  # Type Checking
  # ============================================================================
  type-check:
    name: Type Check (MyPy)
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}
          cache: 'pip'

      - name: Install dependencies
        run: uv sync --group dev

      - name: Run Zuban (mypy mode)
        run: uv run zuban mypy . --show-error-codes

  # ============================================================================
  # Security Checks
  # ============================================================================
  security:
    name: Security Scan
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}
          cache: 'pip'

      - name: Install uv
        uses: astral-sh/setup-uv@v1

      - name: Install dependencies
        run: uv sync --group dev

      - name: Run Bandit
        run: uv run bandit -r . -c pyproject.toml

      - name: Check dependencies (Safety)
        run: uv run safety check --json || true

  # ============================================================================
  # Tests
  # ============================================================================
  test:
    name: Tests (Python ${{ matrix.python-version }})
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest]
        python-version: ["3.11", "3.12", "3.13"]
        include:
          - os: macos-latest
            python-version: "3.11"
          - os: windows-latest
            python-version: "3.11"

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          cache: 'pip'

      - name: Install uv
        uses: astral-sh/setup-uv@v1

      - name: Install dependencies
        run: uv sync --group dev

      - name: Run tests
        run: uv run pytest -n auto --cov=. --cov-report=xml --cov-report=term-missing

      - name: Upload coverage to Codecov
        if: matrix.os == 'ubuntu-latest' && matrix.python-version == '3.11'
        uses: codecov/codecov-action@v3
        with:
          file: ./coverage.xml
          flags: unittests
          name: codecov-umbrella
          fail_ci_if_error: false

  # ============================================================================
  # Build Check
  # ============================================================================
  build:
    name: Build Check
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}
          cache: 'pip'

      - name: Install uv
        uses: astral-sh/setup-uv@v1

      - name: Install dependencies
        run: uv sync --group dev

      - name: Build package
        run: uv run python -m build

      - name: Check package
        run: uv run twine check dist/*

  # ============================================================================
  # Deployment Readiness
  # ============================================================================
  deployment-check:
    name: Deployment Readiness
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}
          cache: 'pip'

      - name: Install dependencies
        run: uv sync --group dev

      - name: Check deployment readiness
        run: uv run ./atoms check || true

  # ============================================================================
  # All Checks Passed
  # ============================================================================
  all-checks:
    name: All Checks Passed
    runs-on: ubuntu-latest
    needs: [lint, type-check, security, test, build]
    steps:
      - name: All checks passed
        run: echo "âœ… All CI checks passed!"
