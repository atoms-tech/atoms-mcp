name: Code Quality

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  PYTHON_VERSION: "3.11"

jobs:
  # ============================================================================
  # SonarCloud Analysis
  # ============================================================================
  sonarcloud:
    name: SonarCloud Analysis
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Shallow clones should be disabled for better analysis

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}
          cache: 'pip'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pytest pytest-cov

      - name: Run tests with coverage
        run: |
          pytest --cov=. --cov-report=xml

      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

  # ============================================================================
  # CodeQL Analysis
  # ============================================================================
  codeql:
    name: CodeQL Analysis
    runs-on: ubuntu-latest
    permissions:
      actions: read
      contents: read
      security-events: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Initialize CodeQL
        uses: github/codeql-action/init@v3
        with:
          languages: python
          queries: security-and-quality

      - name: Autobuild
        uses: github/codeql-action/autobuild@v3

      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v3

  # ============================================================================
  # Dependency Review
  # ============================================================================
  dependency-review:
    name: Dependency Review
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Dependency Review
        uses: actions/dependency-review-action@v4
        with:
          fail-on-severity: moderate

  # ============================================================================
  # License Compliance
  # ============================================================================
  license-check:
    name: License Compliance
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}
          cache: 'pip'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pip-licenses

      - name: Check licenses
        run: |
          pip-licenses --format=json --output-file=licenses.json
          pip-licenses --format=markdown --output-file=licenses.md

      - name: Upload license reports
        uses: actions/upload-artifact@v4
        with:
          name: license-reports
          path: |
            licenses.json
            licenses.md
          retention-days: 30

  # ============================================================================
  # Dead Code Detection
  # ============================================================================
  dead-code:
    name: Dead Code Detection
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}
          cache: 'pip'

      - name: Install dependencies
        run: |
          pip install vulture

      - name: Detect dead code
        run: |
          vulture . --min-confidence 80 > dead_code_report.txt || true

      - name: Upload dead code report
        uses: actions/upload-artifact@v4
        with:
          name: dead-code-report
          path: dead_code_report.txt
          retention-days: 30

  # ============================================================================
  # Code Duplication
  # ============================================================================
  duplication:
    name: Code Duplication
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}
          cache: 'pip'

      - name: Install dependencies
        run: |
          pip install pylint

      - name: Check for duplicates
        run: |
          pylint --disable=all --enable=duplicate-code . > duplication_report.txt || true

      - name: Upload duplication report
        uses: actions/upload-artifact@v4
        with:
          name: duplication-report
          path: duplication_report.txt
          retention-days: 30

  # ============================================================================
  # Import Analysis
  # ============================================================================
  import-analysis:
    name: Import Analysis
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}
          cache: 'pip'

      - name: Install dependencies
        run: |
          pip install importchecker pydeps

      - name: Analyze imports
        run: |
          pydeps . --max-bacon=2 --cluster --rankdir=TB -o import_graph.svg || true

      - name: Upload import graph
        uses: actions/upload-artifact@v4
        with:
          name: import-graph
          path: import_graph.svg
          retention-days: 30

  # ============================================================================
  # Type Coverage
  # ============================================================================
  type-coverage:
    name: Type Coverage
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}
          cache: 'pip'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install mypy monkeytype

      - name: Check type coverage
        run: |
          mypy . --html-report type_coverage_report || true

      - name: Upload type coverage report
        uses: actions/upload-artifact@v4
        with:
          name: type-coverage-report
          path: type_coverage_report/
          retention-days: 30

  # ============================================================================
  # Security Scanning (Advanced)
  # ============================================================================
  security-advanced:
    name: Advanced Security Scan
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}
          cache: 'pip'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install semgrep

      - name: Run Semgrep
        run: |
          semgrep --config=auto --json --output=semgrep_report.json . || true

      - name: Upload Semgrep report
        uses: actions/upload-artifact@v4
        with:
          name: semgrep-report
          path: semgrep_report.json
          retention-days: 30

