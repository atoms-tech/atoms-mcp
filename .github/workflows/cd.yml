name: CD

on:
  push:
    branches: [main]
    tags:
      - 'v*'
  workflow_dispatch:
    inputs:
      environment:
        description: 'Deployment environment'
        required: true
        type: choice
        options:
          - preview
          - production

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: false

env:
  PYTHON_VERSION: "3.11"

jobs:
  # ============================================================================
  # Pre-deployment Checks
  # ============================================================================
  pre-deploy:
    name: Pre-deployment Checks
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}
          cache: 'pip'

      - name: Install uv
        uses: astral-sh/setup-uv@v1

      - name: Install dependencies
        run: uv sync --group dev

      - name: Vendor packages
        run: uv run ./atoms vendor setup --clean

      - name: Check schema sync
        run: uv run ./atoms schema check || true

      - name: Check deployment readiness
        run: uv run ./atoms check

      - name: Upload vendored packages
        uses: actions/upload-artifact@v4
        with:
          name: vendored-packages
          path: |
            pheno_vendor/
            requirements-prod.txt
            sitecustomize.py
          retention-days: 1

  # ============================================================================
  # Deploy to Preview
  # ============================================================================
  deploy-preview:
    name: Deploy to Preview
    runs-on: ubuntu-latest
    needs: pre-deploy
    if: |
      github.event_name == 'push' && github.ref == 'refs/heads/main' ||
      github.event_name == 'workflow_dispatch' && github.event.inputs.environment == 'preview'
    environment:
      name: preview
      url: https://devmcp.atoms.tech
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download vendored packages
        uses: actions/download-artifact@v4
        with:
          name: vendored-packages

      - name: Deploy to Vercel (Preview)
        uses: amondnet/vercel-action@v25
        with:
          vercel-token: ${{ secrets.VERCEL_TOKEN }}
          vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
          vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}
          vercel-args: '--env ENVIRONMENT=preview'
          working-directory: ./

      - name: Comment PR with preview URL
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: 'ðŸš€ Preview deployment ready at https://devmcp.atoms.tech'
            })

  # ============================================================================
  # Deploy to Production
  # ============================================================================
  deploy-production:
    name: Deploy to Production
    runs-on: ubuntu-latest
    needs: pre-deploy
    if: |
      github.event_name == 'push' && startsWith(github.ref, 'refs/tags/v') ||
      github.event_name == 'workflow_dispatch' && github.event.inputs.environment == 'production'
    environment:
      name: production
      url: https://mcp.atoms.tech
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download vendored packages
        uses: actions/download-artifact@v4
        with:
          name: vendored-packages

      - name: Deploy to Vercel (Production)
        uses: amondnet/vercel-action@v25
        with:
          vercel-token: ${{ secrets.VERCEL_TOKEN }}
          vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
          vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}
          vercel-args: '--prod --env ENVIRONMENT=production'
          working-directory: ./

      - name: Create GitHub Release
        if: startsWith(github.ref, 'refs/tags/v')
        uses: softprops/action-gh-release@v1
        with:
          generate_release_notes: true
          draft: false
          prerelease: false

  # ============================================================================
  # Post-deployment Tests
  # ============================================================================
  post-deploy:
    name: Post-deployment Tests
    runs-on: ubuntu-latest
    needs: [deploy-preview]
    if: always() && needs.deploy-preview.result == 'success'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}
          cache: 'pip'

      - name: Install uv
        uses: astral-sh/setup-uv@v1

      - name: Install dependencies
        run: uv sync --group dev

      - name: Run smoke tests
        run: uv run pytest tests/integration/ -m "not slow" || true

      - name: Health check
        run: |
          curl -f https://devmcp.atoms.tech/health || echo "Health check failed"
